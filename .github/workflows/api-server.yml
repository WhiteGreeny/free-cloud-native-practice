# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm' # See 'Options' for all available distributions
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: show graalvm info
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          native-image --version
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.4
#      - name: Execute Gradle build
#        run: gradle nativeCompile
#      - uses: actions/upload-artifact@v3
#        with:
#          name: free-cloud-native-practice-api ${{ matrix.os }}
#          path: build/native/nativeCompile/free-cloud-native-practice*
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        if: matrix.os == 'ubuntu-latest'
#        with:
#          context: .
#          push: false
#          tags: practice-api:latest
      - name: build docker image
        if: matrix.os == 'ubuntu-latest'
        run: |
          pwd
          docker build . --file Dockerfile --tag practice-api:latest
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: fly deploy
        if: matrix.os == 'ubuntu-latest'
        run: |
          flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}